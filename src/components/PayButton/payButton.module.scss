@import "../../styles/variables";

@mixin defaultButton($bgColor, $color, $borderColor: $bgColor) {
	display: flex;
	align-items: center;
	justify-content: center;
	font-family: var(--font-rewards, #{$fontRewards});
	font-weight: 700;
	line-height: 1.5;
	letter-spacing: 1.21px;
	border: 1px solid $white;
	background-color: black;
	border-radius: 3px;
	color: $color;
	text-transform: uppercase;
	outline: none;
	box-sizing: border-box;
	white-space: pre;
	transition: background-color 0.2s ease-in-out;

	&:focus,
	&:hover,
	&:active {
		cursor: pointer;
		color: var(--text-inverse-color, #{$white});
		border-color: $white;
	}

	&:focus {
		box-shadow: 0 0 5px 2px rgb(242, 244, 255, 0.45);
	}

	&:disabled {
		cursor: not-allowed;
		opacity: 0.65;
		color: $color;
	}
}

.default {
	display: inline-flex;
}

.focused {
	button {
		box-shadow: 0 0 0 2px var(--highlight-color, #{$highlight});
	}
}

.capitalize {
	button {
		text-transform: capitalize;
	}
}

.outline {
	button {
		@include defaultButton(
			var(--background-color, #{$white}),
			var(--pickled-bluewood, #{$pickledBluewood}),
			var(--grey-color-100, #{$grey100})
		);

		&:hover,
		&:focus,
		&:active {
			color: var(--primary-color-300, #{$primary300});
			border-color: var(--primary-color-300, #{$primary300});
		}
	}
}

.primary {
	button {
		@include defaultButton(
			var(--primary-color-300, #{$primary300}),
			var(--text-inverse-color, #{$white})
		);

		&:hover,
		&:active,
		&:focus {
			background-color: $soundcloudOrange;
		}
	}
}

.secondary {
	button {
		@include defaultButton(
			transparent,
			var(--text-inverse-color, #{$white}),
			var(--border-inverse-color, #{$white})
		);

		&:hover,
		&:active,
		&:focus {
			background-color: var(--primary-color-300, #{$primary300});
			border-color: var(--border-inverse-color, #{$white});
		}
	}
}

.danger {
	button {
		@include defaultButton(
			var(--pastel-red-color, #{$carnation}),
			var(--text-inverse-color, #{$white})
		);

		&:hover,
		&:active,
		&:focus {
			background-color: var(--error-color, #{$error});
		}
	}
}

.grey {
	button {
		@include defaultButton(
			var(--background-color, #{$white}),
			var(--grey-600-color, #{$grey600}),
			var(--grey-100-color, #{$grey100})
		);

		&:hover,
		&:active,
		&:focus {
			color: var(--grey-900-color, #{$grey900});
			border-color: var(--grey-700-color, #{$grey700});
		}
	}
}

.success {
	button {
		@include defaultButton(
			var(--success-color, #{$success}),
			var(--text-inverse-color, #{$white})
		);

		&:hover,
		&:active,
		&:focus {
			background-color: var(--la-palma-color, #{$laPalma});
		}
	}
}

.link {
	display: inline-flex;

	button {
		border: none;
		color: var(--primary-200-color, #{$primary200});
		text-transform: none;
		background: none;

		&:focus,
		&:hover,
		&:active {
			border: none;
			background: none;
			color: var(--primary-300-color, #{$primary300});
		}

		&:focus {
			box-shadow: none;
		}
	}
}

.xs {
	button {
		padding: 5.5px 12px;
	}
}

.sm {
	button {
		padding: 8px 20px;
	}
}

.md {
	button {
		padding: 10px 32px;
	}
}

.lg {
	button {
		padding: 12px 40px;
	}
}

.full {
	height: 100%;
	width: 100%;
	border-radius: inherit;
	padding: inherit;

	button {
		width: inherit;
		height: inherit;
		border-radius: inherit;
		padding: inherit;
	}
}

.small {
	button {
		font-size: 10.5px;
	}
}

.medium {
	button {
		font-size: 12px;
	}
}

.large {
	button {
		font-size: 14px;
	}
}
